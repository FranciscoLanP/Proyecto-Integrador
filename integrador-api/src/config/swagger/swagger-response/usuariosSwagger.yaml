paths:
  /usuarios:
    get:
      tags:
        - Usuarios
      summary: Obtener todos los usuarios
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Filtrar por username o role
        - in: query
          name: activo
          schema:
            type: boolean
            default: true
          description: Filtrar por usuarios activos/inactivos
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - Usuarios
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

  /usuarios/paginado:
    get:
      tags:
        - Usuarios
      summary: Usuarios paginados
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Elementos por página
        - in: query
          name: search
          schema:
            type: string
          description: Filtrar por username o role
        - in: query
          name: activo
          schema:
            type: boolean
            default: true
          description: Filtrar por usuarios activos/inactivos
      responses:
        '200':
          description: Resultado paginado de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Usuario'
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  totalCount:
                    type: integer

  /usuarios/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID de usuario (_id)
    get:
      tags:
        - Usuarios
      summary: Obtener usuario por ID
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Usuarios
      summary: Actualizar usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Usuarios
      summary: Eliminar usuario (sólo administrador)
      parameters:
        - in: header
          name: X-User-Role
          required: true
          schema:
            type: string
            enum: ['administrador','empleado']
          description: Rol del usuario que hace la solicitud
      responses:
        '204':
          description: Usuario eliminado
        '403':
          description: Forbidden — sólo administrador puede eliminar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Usuario:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - administrador
            - empleado
        activo:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - _id
        - username
        - password
        - role
        - activo
        - createdAt
        - updatedAt

    UsuarioInput:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - administrador
            - empleado
        activo:
          type: boolean
      required:
        - username
        - password
        - role
        - activo

    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message